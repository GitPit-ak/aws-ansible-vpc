- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: import vpc variable
      include_vars: vars/vpc_setup

    - name: create vprofile vpc
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        dns_hostnames: true
        dns_support: true
        region: "{{region}}"
        state: "{{state}}"
        tenancy: default
      register: vpc_out

    # - debug:
    #     var: vpc_out

    - name: create Public subnet 1 for zone1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        cidr: "{{PubSub1Cidr}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub1
      register: pubsub1_out

    - name: create Public subnet 2 for zone1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        cidr: "{{PubSub2Cidr}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub2
      register: pubsub2_out

    - name: create Public subnet 3 for zone1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        cidr: "{{PubSub3Cidr}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub3
      register: pubsub3_out


    - name: create private subnet 1 for zone1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        cidr: "{{PrivSub1Cidr}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        resource_tags:
          Name: vprofile-privsub1
      register: pubpriv1_out

    - name: create private subnet 2 for zone1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        cidr: "{{PrivSub2Cidr}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        resource_tags:
          Name: vprofile-privsub2
      register: pubpriv2_out

    - name: create private subnet 3 for zone1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        cidr: "{{PrivSub3Cidr}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        resource_tags:
          Name: vprofile-privsub3
      register: pubpriv3_out

    - name: Internet Gatewat setup
      ec2_vpc_igw:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
          Name: vprofile-igw
      register: igw_out

    - debug:
        var: igw_out

    - name: setup public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        tags:
          Name: Vprofile-pubRT
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub2_out.subnet.id}}"
          - "{{pubsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
      register: pubRT_out

    - name: Create NAT gateway 
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{pubsub1_out.subnet.id}}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
      register: NATGW_out

    - name: setup private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        tags:
          Name: Vprofile-PrivRT
        subnets:
          - "{{pubpriv1_out.subnet.id}}"
          - "{{pubpriv2_out.subnet.id}}"
          - "{{pubpriv3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ NATGW_out.nat_gateway_id }}"
      register: privRT_out